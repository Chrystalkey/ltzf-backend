FROM rust:1.86-slim-bookworm AS builder

ENV OPENAPI_GENERATOR_VERSION="7.12.0"

WORKDIR /app

RUN apt update \
    &&  apt install -y --no-install-recommends libssl-dev pkg-config libpq5 maven jq curl\
    &&  rm -rf /var/lib/apt/lists/* \
    && curl "https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh" > ./openapi-generator-cli \
    && chmod u+x ./openapi-generator-cli

# caching the first-time-run generators
RUN echo 'openapi: 3.0.0\ninfo:\n  title: "spec"\n  version: "0.1.0"\npaths:\n  /none:\n    get:\n      responses:\n        "200":\n          description: "success"' > openapi.yml \
    && ./openapi-generator-cli generate -g rust-axum -i ./openapi.yml -o ./rs-test \
    && rm -rf rs-test openapi.yml

RUN curl "https://raw.githubusercontent.com/Chrystalkey/landtagszusammenfasser/refs/heads/main/docs/specs/openapi.yml" > ./openapi.yml \
    && ./openapi-generator-cli generate -g rust-axum -i ./openapi.yml -o ./oapicode

RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid 10001 \
    "ltzf-backend"


COPY Cargo.toml Cargo.lock ./

RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    cargo build -r

COPY ./.sqlx ./.sqlx
COPY ./src ./src
COPY ./migrations ./migrations

ENV SQLX_OFFLINE=true

RUN touch src/main.rs && cargo build --release

FROM busybox:latest AS runner

LABEL maintainer="Benedikt Sch√§fer"
LABEL description="Backend for the LTZF"
LABEL version="0.2.2"

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
            CMD curl -f "http://localhost:80" || exit 1

COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

COPY --from=builder /usr/lib/x86_64-linux-gnu/libssl.so.* /usr/lib/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libcrypto.so.* /usr/lib/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libpq.so.* /usr/lib/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libgcc_s.so.* /usr/lib

RUN mkdir /app

COPY --from=builder --chmod=0100 --chown=ltzf-backend:ltzf-backend /app/target/release/ltzf-backend /app/ltzf-backend

WORKDIR /app

USER ltzf-backend

ENTRYPOINT ["./ltzf-backend"]
